
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author k00203546
 */
public class A2Z_Transit extends javax.swing.JFrame {

    int packageId;
    int packageIndex = -1;
    
    String[] counties = {"Antrim", "Armagh", "Carlow", "Cavan", "Clare", "Cork", "Derry", "Donegal",
        "Down", "Dublin", "Fermanagh", "Galway", "Kerry", "Kildare", "Kilkenny", "Laois", "Leitrim",
        "Limerick", "Longford", "Louth", "Mayo", "Neath", "Monaghan", "Offaly", "Roscommon", "Sligo",
        "Tipperary", "Tyrone", "Waterford", "Westmeath", "Wexford", "Wicklow"};

    DateFormat formatter;
    Locale currentLocale = new Locale("en");
    ResourceBundle rb = ResourceBundle.getBundle("R_Bundles.MyResourceBundle", currentLocale);

    ArrayList<Package> pList = new ArrayList();

  
    DefaultComboBoxModel model = new DefaultComboBoxModel();

    public A2Z_Transit(Locale currentLocale) {
        this.packageId = 1;
        initComponents();

        this.currentLocale = currentLocale;
        updateStrings();

        scanButton.setEnabled(true);
        removeButton.setEnabled(false);
        editButton.setEnabled(false);
        addButton.setEnabled(false);
        updateButton.setEnabled(false);
        backButton.setEnabled(false);
        nextButton.setEnabled(false);
        displayButton.setEnabled(false);
        arrivedAtTextfield.setEnabled(false);
        packageIDtextfield.setEnabled(false);
        nameTextfield.setEnabled(false);
        addressTextfield.setEnabled(false);
        cityTextfield.setEnabled(false);
        countyComboBox.setEnabled(false);
        contactNumTextfield.setEnabled(false);
        descriptionTextfield.setEnabled(false);
        priceTextfield.setEnabled(false);
        yesRadioButton.setEnabled(false);
        noRadioButton.setEnabled(false);
        writetoFileButton.setEnabled(false);
        readFromFileButton.setEnabled(true);

        // Initialize the combo box to add all the counties
        for (String county : counties) {
            countyComboBox.addItem(county);
            packageByCountyComboBox.addItem(county);
        }

        countyComboBox.setSelectedItem("Antrim");
        packageByCountyComboBox.setSelectedItem("Antrim");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choice1 = new java.awt.Choice();
        arrivedAtLabel = new javax.swing.JLabel();
        arrivedAtTextfield = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        packageIDLabel = new javax.swing.JLabel();
        packageIDtextfield = new javax.swing.JTextField();
        nameLbl = new javax.swing.JLabel();
        nameTextfield = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressTextfield = new javax.swing.JTextField();
        cityLbl = new javax.swing.JLabel();
        cityTextfield = new javax.swing.JTextField();
        countyLbl = new javax.swing.JLabel();
        countyComboBox = new javax.swing.JComboBox<>();
        contactNumLbl = new javax.swing.JLabel();
        contactNumTextfield = new javax.swing.JTextField();
        descriptionLbl = new javax.swing.JLabel();
        descriptionTextfield = new javax.swing.JTextField();
        priceLbl = new javax.swing.JLabel();
        priceTextfield = new javax.swing.JTextField();
        prepaidLbl = new javax.swing.JLabel();
        yesRadioButton = new javax.swing.JRadioButton();
        noRadioButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        packageByCountyComboBox = new javax.swing.JComboBox<>(model);
        jScrollPane1 = new javax.swing.JScrollPane();
        outputList = new javax.swing.JList<>(model);
        jPanel4 = new javax.swing.JPanel();
        scanButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        writetoFileButton = new javax.swing.JButton();
        readFromFileButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("A2Z Transit");

        arrivedAtLabel.setText("Arrived at:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Package Information"));
        jPanel1.setToolTipText("");

        packageIDLabel.setText("Package ID:");

        nameLbl.setText("Name");

        addressLabel.setText("Address:");

        cityLbl.setText("City:");

        countyLbl.setText("County:");

        countyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countyComboBoxActionPerformed(evt);
            }
        });

        contactNumLbl.setText("Contact Num:");

        descriptionLbl.setText("Description:");

        priceLbl.setText("Price:");

        prepaidLbl.setText("Prepaid:");

        yesRadioButton.setText("Yes");

        noRadioButton.setText("No");

        jPanel3.setLayout(new java.awt.GridLayout(1, 8, 3, 2));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(priceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prepaidLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(noRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(descriptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionTextfield))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cityTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(countyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(countyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(contactNumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contactNumTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(packageIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packageIDtextfield))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTextfield))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addressTextfield)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(packageIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(packageIDtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactNumLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactNumTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yesRadioButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(priceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(priceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(prepaidLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(noRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cityTextfield, contactNumTextfield});

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Packages by County"));

        packageByCountyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        packageByCountyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packageByCountyComboBoxActionPerformed(evt);
            }
        });

        outputList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outputListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(outputList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(packageByCountyComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(packageByCountyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setLayout(new java.awt.GridLayout(1, 8));

        scanButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/scan.png"))); // NOI18N
        scanButton.setText("Scan Now");
        scanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanButtonActionPerformed(evt);
            }
        });
        jPanel4.add(scanButton);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/addButton.gif"))); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel4.add(addButton);

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/removeButton.png"))); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        jPanel4.add(removeButton);

        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/editButton.png"))); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jPanel4.add(editButton);

        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/updateButton.gif"))); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel4.add(updateButton);

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/backButton.png"))); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel4.add(backButton);

        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nextButton.png"))); // NOI18N
        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        jPanel4.add(nextButton);

        displayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/displayAllButton.png"))); // NOI18N
        displayButton.setText("Display All");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });
        jPanel4.add(displayButton);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        writetoFileButton.setBackground(new java.awt.Color(204, 204, 255));
        writetoFileButton.setText("Write to File");
        writetoFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writetoFileButtonActionPerformed(evt);
            }
        });
        jPanel5.add(writetoFileButton);

        readFromFileButton.setText("Read File");
        readFromFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readFromFileButtonActionPerformed(evt);
            }
        });
        jPanel5.add(readFromFileButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(arrivedAtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arrivedAtTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrivedAtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrivedAtTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateButton.setEnabled(false);

        if (editButton.isSelected()) {
            updateButton.setEnabled(true);
        }
        if (updateButton.isSelected()) {
            updateButton.setEnabled(false);
        }

        scanButton.setEnabled(true);
        addButton.setEnabled(false);
        removeButton.setEnabled(true);
        editButton.setEnabled(true);
        backButton.setEnabled(false);
        nextButton.setEnabled(false);
        displayButton.setEnabled(true);

        arrivedAtTextfield.setEnabled(false);
        packageIDtextfield.setEnabled(false);
        nameTextfield.setEnabled(false);
        addressTextfield.setEnabled(false);
        cityTextfield.setEnabled(false);
        countyComboBox.setEnabled(false);
        contactNumTextfield.setEnabled(false);
        descriptionTextfield.setEnabled(false);
        priceTextfield.setEnabled(false);
        yesRadioButton.setEnabled(false);
        noRadioButton.setEnabled(false);

        String name = nameTextfield.getText();
        String address = addressTextfield.getText();
        String city = cityTextfield.getText();
        String county = (String) countyComboBox.getSelectedItem();
        String contactNum = contactNumTextfield.getText();
        String arrivalTime = arrivedAtTextfield.getText();
        double price = Double.parseDouble(priceTextfield.getText());
        String description = descriptionTextfield.getText();
        boolean prepaid;
        prepaid = yesRadioButton.isSelected();
        
          try {
            if (nameTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Name - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            if (addressTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Address - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            if (cityTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "City - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            try {
                if (contactNumTextfield.getText().isEmpty()) {
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Contact Number - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            if (descriptionTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Description - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            try {
                if (priceTextfield.getText().isEmpty()) {
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Price - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid number", "Error", JOptionPane.WARNING_MESSAGE);
        }

        Package p = new Package(packageId, arrivalTime);
        p.setPackage(name, address, city, county, contactNum, arrivalTime, description, price, prepaid);
        pList.add(p);
        writeToBinaryFile();

    }//GEN-LAST:event_updateButtonActionPerformed

    private void countyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countyComboBoxActionPerformed
        countyComboBox.setEnabled(false);

    }//GEN-LAST:event_countyComboBoxActionPerformed

    private void scanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanButtonActionPerformed
        model.removeAllElements();
        packageIDtextfield.setText(Integer.toString(packageId));
        if (scanButton.isSelected()) {
            packageId++;
        }
        setDateAndTime();

        nameTextfield.setText("");
        addressTextfield.setText("");
        cityTextfield.setText("");
        contactNumTextfield.setText("");
        priceTextfield.setText("");
        yesRadioButton.setText("");
        noRadioButton.setText("");
        descriptionTextfield.setText("");

        addButton.setEnabled(true);
        scanButton.setEnabled(true);
        removeButton.setEnabled(false);
        editButton.setEnabled(false);
        updateButton.setEnabled(false);
        backButton.setEnabled(false);
        nextButton.setEnabled(false);
        displayButton.setEnabled(false);
        arrivedAtTextfield.setEnabled(false);
        packageIDtextfield.setEnabled(false);
        nameTextfield.setEnabled(true);
        addressTextfield.setEnabled(true);
        cityTextfield.setEnabled(true);
        countyComboBox.setEnabled(true);
        contactNumTextfield.setEnabled(true);
        descriptionTextfield.setEnabled(true);
        priceTextfield.setEnabled(true);
        yesRadioButton.setEnabled(true);
        noRadioButton.setEnabled(true);
        yesRadioButton.setSelected(false);
        noRadioButton.setSelected(false);


    }//GEN-LAST:event_scanButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //   packageIDtextfield.setText(Integer.toString(packageId));

      

        addButton.setEnabled(false);
        scanButton.setEnabled(true);
        removeButton.setEnabled(true);
        editButton.setEnabled(true);
        if (pList.size() > 1) {
            nextButton.setEnabled(true);
            backButton.setEnabled(true);
        }
        updateButton.setEnabled(false);
        displayButton.setEnabled(true);
        arrivedAtTextfield.setEditable(false);
        packageIDtextfield.setEditable(false);
        contactNumTextfield.setEnabled(true);
        priceTextfield.setEditable(true);
        writetoFileButton.setEnabled(true);

        String name = nameTextfield.getText();
        String address = addressTextfield.getText();
        String city = cityTextfield.getText();
        String county = (String) countyComboBox.getSelectedItem();
        String contactNum = contactNumTextfield.getText();
        String arrivalTime = arrivedAtTextfield.getText();
        double price = Double.parseDouble(priceTextfield.getText());
        String description = descriptionTextfield.getText();
        boolean prepaid;
        prepaid = yesRadioButton.isSelected();

        try {
            if (nameTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Name - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            if (addressTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Address - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            if (cityTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "City - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            try {
                if (contactNumTextfield.getText().isEmpty()) {
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Contact Number - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            if (descriptionTextfield.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Description - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
            try {
                if (priceTextfield.getText().isEmpty()) {
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Price - is a Required Field and you must use characters", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid number", "Error", JOptionPane.WARNING_MESSAGE);
        }

        Package p = new Package(packageId, arrivalTime);
        p.setPackage(name, address, city, county, contactNum, arrivalTime, description, price, prepaid);
        pList.add(p);

        model.addElement("Package ID: " + packageIDtextfield.getText());
        outputList.setModel(model);


    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        removeButton.setEnabled(false);
        if (pList.size() >= 1) {
            removeButton.setEnabled(true);
        }

        int option = JOptionPane.YES_NO_OPTION;
        JOptionPane.showConfirmDialog(null, "Are you sure you want to remove this package", "Select an Option", option);
        if (option == 0) {

            int p = Integer.parseInt(packageIDtextfield.getText());

            for (Package pack : pList) {
                if (pack.getPackageID() == p) {
                    pList.remove(p);
                    break;
                }

            }

            JOptionPane.showMessageDialog(null, "Package : " + packageId + " has been deleted");
        }
        System.out.println(pList.size());
        nameTextfield.setText("");
        addressTextfield.setText("");
        cityTextfield.setText("");
        contactNumTextfield.setText("");
        arrivedAtTextfield.setText("");
        priceTextfield.setText("");
        descriptionTextfield.setText("");
        yesRadioButton.setSelected(false);
        noRadioButton.setSelected(false);
        model.removeAllElements();


    }//GEN-LAST:event_removeButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        editButton.setEnabled(false);

        if (pList.size() >= 1) {
            editButton.setEnabled(true);
        }

        updateButton.setEnabled(true);
        nameTextfield.setEnabled(true);
        addressTextfield.setEnabled(true);
        cityTextfield.setEnabled(true);
        countyComboBox.setEnabled(true);
        contactNumTextfield.setEnabled(true);
        descriptionTextfield.setEnabled(true);
        priceTextfield.setEnabled(true);
        yesRadioButton.setEnabled(true);
        noRadioButton.setEnabled(true);

        addButton.setEnabled(false);
        scanButton.setEnabled(false);
        removeButton.setEnabled(false);
        editButton.setEnabled(false);
        updateButton.setEnabled(true);
        backButton.setEnabled(false);
        nextButton.setEnabled(false);
        displayButton.setEnabled(false);


    }//GEN-LAST:event_editButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        if (packageIndex == 0) {
            backButton.setEnabled(false);
        } else {
            int previousP = packageIndex - 1;

            arrivedAtTextfield.setText(pList.get(previousP).getArrivalTime());
            packageIDtextfield.setText("" + pList.get(previousP).getPackageID());
            nameTextfield.setText(pList.get(previousP).getName());
            addressTextfield.setText(pList.get(previousP).getAddress());
            cityTextfield.setText(pList.get(previousP).getCity());
            contactNumTextfield.setText(pList.get(previousP).getContactNumber());
            descriptionTextfield.setText(pList.get(previousP).getDescription());
            priceTextfield.setText("" + pList.get(previousP).getPrice());
            countyComboBox.setSelectedItem(pList.get(previousP).getCounty());

            if (pList.get(previousP).isPrePaid()) {
                yesRadioButton.setSelected(true);
            } else {
                noRadioButton.setSelected(true);
            }
            packageIndex--;

            if (packageIndex == 0) {
                backButton.setEnabled(false);
            }
            nextButton.setEnabled(true);
        }

    }//GEN-LAST:event_backButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed

        if (packageIndex == pList.size() - 1) {
            nextButton.setEnabled(false);
        } else {
            int nextPackage = packageIndex + 1;

            arrivedAtTextfield.setText(pList.get(nextPackage).getArrivalTime());
            packageIDtextfield.setText("" + pList.get(nextPackage).getPackageID());
            nameTextfield.setText(pList.get(nextPackage).getName());
            addressTextfield.setText(pList.get(nextPackage).getAddress());
            cityTextfield.setText(pList.get(nextPackage).getCity());
            contactNumTextfield.setText(pList.get(nextPackage).getContactNumber());
            descriptionTextfield.setText(pList.get(nextPackage).getDescription());
            priceTextfield.setText("" + pList.get(nextPackage).getPrice());
            countyComboBox.setSelectedItem(pList.get(nextPackage).getCounty());
            if (pList.get(nextPackage).isPrePaid()) {
                yesRadioButton.setSelected(true);
            } else {
                noRadioButton.setSelected(true);
            }

            packageIndex++;

            if (packageIndex == pList.size() - 1) {
                nextButton.setEnabled(false);
            }
            backButton.setEnabled(true);
            editButton.setEnabled(true);
            removeButton.setEnabled(true);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        if (pList.isEmpty()) {
            displayButton.setEnabled(false);
        }
        JOptionPane.showMessageDialog(rootPane, pList.toString() + "\n", "Current List of Parcels", HEIGHT);

    }//GEN-LAST:event_displayButtonActionPerformed

    private void outputListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outputListMouseClicked
       

    }//GEN-LAST:event_outputListMouseClicked

    private void packageByCountyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packageByCountyComboBoxActionPerformed
        ArrayList county = new ArrayList(Arrays.asList(counties));

        DefaultListModel pModel = new DefaultListModel();

        for (Package p : pList) {
            if (p.getCounty().equalsIgnoreCase(packageByCountyComboBox.getSelectedItem().toString())) {
                pModel.addElement("Package ID: " + p.getPackageID());
            }
        }

        outputList.setModel(pModel);

    }//GEN-LAST:event_packageByCountyComboBoxActionPerformed

    private void writetoFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writetoFileButtonActionPerformed

        writeToBinaryFile();
    }//GEN-LAST:event_writetoFileButtonActionPerformed

    private void readFromFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readFromFileButtonActionPerformed
        readFromBinaryFile();
    }//GEN-LAST:event_readFromFileButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(A2Z_Transit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(A2Z_Transit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(A2Z_Transit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(A2Z_Transit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new A2Z_Transit().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextfield;
    private javax.swing.JLabel arrivedAtLabel;
    private javax.swing.JTextField arrivedAtTextfield;
    private javax.swing.JButton backButton;
    private java.awt.Choice choice1;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JTextField cityTextfield;
    private javax.swing.JLabel contactNumLbl;
    private javax.swing.JTextField contactNumTextfield;
    private javax.swing.JComboBox<String> countyComboBox;
    private javax.swing.JLabel countyLbl;
    private javax.swing.JLabel descriptionLbl;
    private javax.swing.JTextField descriptionTextfield;
    private javax.swing.JButton displayButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTextfield;
    private javax.swing.JButton nextButton;
    private javax.swing.JRadioButton noRadioButton;
    private javax.swing.JList<String> outputList;
    private javax.swing.JComboBox<String> packageByCountyComboBox;
    private javax.swing.JLabel packageIDLabel;
    private javax.swing.JTextField packageIDtextfield;
    private javax.swing.JLabel prepaidLbl;
    private javax.swing.JLabel priceLbl;
    private javax.swing.JTextField priceTextfield;
    private javax.swing.JButton readFromFileButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton scanButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton writetoFileButton;
    private javax.swing.JRadioButton yesRadioButton;
    // End of variables declaration//GEN-END:variables

    public void updateStrings() {

        rb = ResourceBundle.getBundle("R_Bundles.MyResourceBundle", currentLocale);

        arrivedAtLabel.setText(rb.getString("Arrived_At"));
        packageIDLabel.setText(rb.getString("Package_ID"));
        nameLbl.setText(rb.getString("Name"));
        addressLabel.setText(rb.getString("Address"));
        cityLbl.setText(rb.getString("City"));
        countyLbl.setText(rb.getString("County"));
        contactNumLbl.setText(rb.getString("Contact_Num"));
        descriptionLbl.setText(rb.getString("Description"));
        priceLbl.setText(rb.getString("Price"));
        prepaidLbl.setText(rb.getString("Prepaid"));
        yesRadioButton.setText(rb.getString("Yes"));
        noRadioButton.setText(rb.getString("No"));
        scanButton.setText(rb.getString("Scan_Now"));
        addButton.setText(rb.getString("Add"));
        removeButton.setText(rb.getString("Remove"));
        editButton.setText(rb.getString("Edit"));
        updateButton.setText(rb.getString("Update"));
        backButton.setText(rb.getString("Back"));
        nextButton.setText(rb.getString("Next"));
        displayButton.setText(rb.getString("Display_All"));
        writetoFileButton.setText(rb.getString("Write_to_File"));
        readFromFileButton.setText(rb.getString("Read_File"));
//           jPanel1.(rb.getString("Package_Information"));
//            jPanel2.(rb.getString("Package_by_County"));
    }

    public void setDateAndTime() {
        GregorianCalendar cal = new GregorianCalendar();
        formatter = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, currentLocale);
        String today = formatter.format(cal.getTime());
        arrivedAtTextfield.setText(today);

    }

    public void writeToBinaryFile() {
        try {
            File f1 = new File("PackageInformation.txt");

            ObjectOutputStream oOut;
            try (FileOutputStream fOut = new FileOutputStream(f1)) {
                oOut = new ObjectOutputStream(fOut);
                oOut.writeObject(pList);
                String info = "";

                for (int i = 0; i < pList.size(); i++) {
                    info += pList.get(i).toString();
                }
            }
            oOut.close();

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    public void readFromBinaryFile() {
        try {
            File f1 = new File("PackageInformation.txt");

            ObjectInputStream oInput;
            try (FileInputStream fInput = new FileInputStream(f1)) {
                oInput = new ObjectInputStream(fInput);
                pList = (ArrayList<Package>) oInput.readObject();
                String info = "";

                for (int i = 0; i < pList.size(); i++) {
                    info += pList.get(i).toString();
                }
            }
            oInput.close();

        } catch (IOException | ClassNotFoundException e) {
            System.out.println(e.getMessage());

        }

    }

}
